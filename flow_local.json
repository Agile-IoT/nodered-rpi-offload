[{
	"id": "b88e911f.6ea9b",
	"type": "tab",
	"label": "Main"
}, {
	"id": "c41c7db7.02381",
	"type": "tab",
	"label": "HeavyTask"
}, {
	"id": "b4eb8788.006cb8",
	"type": "tab",
	"label": "Monitor",
	"disabled": false,
	"info": ""
}, {
	"id": "7cf0f313.fedfbc",
	"type": "inject",
	"z": "b88e911f.6ea9b",
	"name": "start",
	"topic": "",
	"payload": "{\"url\":\"http://jurnsearch.files.wordpress.com/2009/07/ocr-test.jpg\",\"thresholds\":{\"maxlocal\":2}}",
	"payloadType": "json",
	"repeat": "",
	"crontab": "",
	"once": false,
	"onceDelay": "",
	"x": 80.5,
	"y": 236,
	"wires": [
		["7e5dfa25.b83914"]
	]
}, {
	"id": "a6b8ea0f.004cf8",
	"type": "link out",
	"z": "b88e911f.6ea9b",
	"name": "",
	"links": ["1b56e9c8.a27e66"],
	"x": 544.5,
	"y": 272,
	"wires": []
}, {
	"id": "a902a8f7.62e358",
	"type": "link in",
	"z": "b88e911f.6ea9b",
	"name": "",
	"links": ["7423bac4.8c55c4", "23da1b97.a73164"],
	"x": 287.5,
	"y": 459,
	"wires": [
		["7606d6eb.618878"]
	]
}, {
	"id": "79a8aceb.c7add4",
	"type": "debug",
	"z": "b88e911f.6ea9b",
	"name": "main.out",
	"active": true,
	"tosidebar": true,
	"console": false,
	"tostatus": false,
	"complete": "payload.offload",
	"x": 540,
	"y": 460,
	"wires": []
}, {
	"id": "7423bac4.8c55c4",
	"type": "link out",
	"z": "c41c7db7.02381",
	"name": "",
	"links": ["a902a8f7.62e358"],
	"x": 655,
	"y": 320,
	"wires": []
}, {
	"id": "1b56e9c8.a27e66",
	"type": "link in",
	"z": "c41c7db7.02381",
	"name": "",
	"links": ["a6b8ea0f.004cf8", "427b2caa.df0444"],
	"x": 135,
	"y": 140,
	"wires": [
		["fe379e28.9beed", "25b7621b.e4e27e"]
	]
}, {
	"id": "8d3d23c2.99eef",
	"type": "inject",
	"z": "b88e911f.6ea9b",
	"name": "",
	"topic": "",
	"payload": "",
	"payloadType": "date",
	"repeat": "",
	"crontab": "",
	"once": false,
	"x": 121.5,
	"y": 26,
	"wires": [
		["cf62b583.748298"]
	]
}, {
	"id": "76581c02.fe78d4",
	"type": "tab-deploy",
	"z": "b88e911f.6ea9b",
	"name": "",
	"tab": "HeavyTask",
	"remote": "https://rosogon-nodered.herokuapp.com",
	"x": 439.5,
	"y": 25,
	"wires": []
}, {
	"id": "fe379e28.9beed",
	"type": "debug",
	"z": "c41c7db7.02381",
	"name": "heavytask.in",
	"active": false,
	"console": "false",
	"complete": "payload",
	"x": 270,
	"y": 80,
	"wires": []
}, {
	"id": "cf62b583.748298",
	"type": "function",
	"z": "b88e911f.6ea9b",
	"name": "f1",
	"func": "msg.payload = {\n    sourceurl: \"http://localhost:1880\"\n}\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 273.5,
	"y": 26,
	"wires": [
		["76581c02.fe78d4"]
	]
}, {
	"id": "23da1b97.a73164",
	"type": "link out",
	"z": "b88e911f.6ea9b",
	"name": "",
	"links": ["a902a8f7.62e358"],
	"x": 543.5,
	"y": 356,
	"wires": []
}, {
	"id": "23cd2ded.37af12",
	"type": "cloud-link",
	"z": "b88e911f.6ea9b",
	"name": "cloud-link",
	"cpu": "100",
	"mem": "100",
	"temperature": "100",
	"remote": "http://192.168.1.101:1880/c1370567.f2fd88",
	"dummy": false,
	"x": 420.5,
	"y": 319,
	"wires": [
		["a6b8ea0f.004cf8"],
		["23da1b97.a73164"]
	]
}, {
	"id": "95fb0d65.b6a1b",
	"type": "tesseract",
	"z": "c41c7db7.02381",
	"name": "",
	"language": "eng",
	"x": 420,
	"y": 260,
	"wires": [
		["6e60258.235d2dc"]
	]
}, {
	"id": "7e5dfa25.b83914",
	"type": "function",
	"z": "b88e911f.6ea9b",
	"name": "parse params",
	"func": "\n//\n// Parse params and prepare image loading\n//\n\n//\n// inc batchcount\n//\nflow.set(\"batchcount\", \n  (flow.get(\"batchcount\") || 0 ) + 1)\n\n//\n// Store needed info in msg.offload since \n// HttpReq node replaces msg.payload.\n// Offload object contains the monitoring data\n// to be dumped at the end\n\nbatchId = msg.payload.batchId || \"batch0\"\n\nmsg.url = msg.payload.url\nmsg.link = msg.payload.link\nmsg.offload = {\n    batchId : batchId,\n    thresholds : msg.payload.thresholds || {},\n    trigger : (msg.req && msg.res)? \"http\" : \"inject\",\n    times: {\n        batchstart: undefined,\n        procstart: undefined,\n        jobstart: undefined,\n        jobend: undefined,\n        procend: undefined,\n        batchend: undefined,\n        jobdelta: undefined,\n        procdelta: undefined,\n        batchdelta: undefined\n    }\n}\n\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 239.5,
	"y": 306,
	"wires": [
		["38a7bd5f.4f4d32"]
	]
}, {
	"id": "38a7bd5f.4f4d32",
	"type": "http request",
	"z": "b88e911f.6ea9b",
	"name": "load image",
	"method": "GET",
	"ret": "bin",
	"url": "",
	"tls": "",
	"x": 225.5,
	"y": 352,
	"wires": [
		["d0ad46c9.928d18"]
	]
}, {
	"id": "d0ad46c9.928d18",
	"type": "function",
	"z": "b88e911f.6ea9b",
	"name": "prepare-cl",
	"func": "// \n// set times and prepare call to cloud-link\n//\n\nvar now = new Date().getTime()\n//\n// Save in context[<batchId>] the current timestamp\n// the first time a job arrives\n//\nif (!context.get(msg.offload.batchId)) {\n    context.set(msg.offload.batchId, now)\n}\n\n// set process start\nmsg.offload.times.procstart = now\n// set batch start (equal to now the first time)\nmsg.offload.times.batchstart = context.get(msg.offload.batchId)\n\n\nvar b64 = msg.payload.toString('base64');\n\n//\n// Cloud-link needs msg.payload to \n// contain the job\n//\nmsg.payload = {\n    img: b64,\n    offload: msg.offload,\n    thresholds: msg.offload.thresholds\n}\n\n//\n// Check max local count\n//\nmaxlocal = msg.offload.thresholds.maxlocal;\nlocalcount = global.get(\"localcount\") || 0;\nif (maxlocal && localcount >= maxlocal) {\n    msg.link = \"remote\";   // forces remote processing\n}\n\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 223.5,
	"y": 397,
	"wires": [
		["23cd2ded.37af12"]
	]
}, {
	"id": "c1a36064.11d05",
	"type": "function",
	"z": "c41c7db7.02381",
	"name": "tobuffer",
	"func": "msg.payload = Buffer.from(msg.payload.img,'base64');\n\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 360,
	"y": 200,
	"wires": [
		["95fb0d65.b6a1b"]
	]
}, {
	"id": "23695cb0.f9ad54",
	"type": "inject",
	"z": "b88e911f.6ea9b",
	"name": "force to cloud",
	"topic": "",
	"payload": "{ \"link\": \"remote\", \"url\": \"http://jurnsearch.files.wordpress.com/2009/07/ocr-test.jpg\"}",
	"payloadType": "json",
	"repeat": "",
	"crontab": "",
	"once": false,
	"onceDelay": "",
	"x": 99.5,
	"y": 187,
	"wires": [
		["7e5dfa25.b83914"]
	]
}, {
	"id": "4489dfce.b91d2",
	"type": "debug",
	"z": "c41c7db7.02381",
	"name": "heavytask.out",
	"active": false,
	"tosidebar": true,
	"console": false,
	"tostatus": false,
	"complete": "payload",
	"x": 680,
	"y": 380,
	"wires": []
}, {
	"id": "25b7621b.e4e27e",
	"type": "function",
	"z": "c41c7db7.02381",
	"name": "prepare-tesseract-1",
	"func": "//\n// Tesseract discards payload. \n// Store in msg.offload first\n//\n\nmsg.offload = msg.payload.offload\nmsg.offload.times.jobstart = new Date().getTime()\n\nmsg.offload.values = msg.payload.values\nmsg.offload.thresholds = msg.payload.thresholds\n\nmsg.offload.remote = msg.payload.remote\n\n// Inc local count\nif (!msg.payload.remote) {\n    global.set(\"localcount\", \n        (global.get(\"localcount\") || 0) + 1);\n}\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 310,
	"y": 140,
	"wires": [
		["c1a36064.11d05"]
	]
}, {
	"id": "6e60258.235d2dc",
	"type": "function",
	"z": "c41c7db7.02381",
	"name": "postjob",
	"func": "// \n// Process times\n//\nvar times = msg.offload.times\n\ntimes.jobend = new Date().getTime()\ntimes.jobdelta = times.jobend - times.jobstart\n\n// \n// Copy-back to msg.payload\n//\nmsg.payload = {\n    offload: msg.offload,\n    tesseract: msg.payload\n}\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 480,
	"y": 320,
	"wires": [
		["7423bac4.8c55c4", "4489dfce.b91d2"]
	]
}, {
	"id": "7606d6eb.618878",
	"type": "function",
	"z": "b88e911f.6ea9b",
	"name": "postproc",
	"func": "var now = new Date().getTime()\n\n//\n// Update times\n//\nvar times = msg.payload.offload.times\ntimes.procend = now\ntimes.procdelta = times.procend - times.procstart\n\ntimes.batchend = now\ntimes.batchdelta = times.batchend - times.batchstart\n\nmsg.payload.offload.remote = msg.payload.offload.remote? 1: 0\n\n//\n// Dec counts\n//\nflow.set(\"batchcount\", flow.get(\"batchcount\") - 1)\nif (!msg.payload.offload.remote) {\n    global.set(\"localcount\", global.set(\"localcount\") - 1)\n}\n\n// Store results\nvar results = flow.get(\"batchresults\") || []\nresults.push(msg.payload.offload)\nflow.set(\"batchresults\", results)\n\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 400,
	"y": 460,
	"wires": [
		["79a8aceb.c7add4", "cc861a19.525378"]
	]
}, {
	"id": "af7c6674.eef148",
	"type": "http in",
	"z": "b88e911f.6ea9b",
	"name": "",
	"url": "/newjob",
	"method": "post",
	"upload": false,
	"swaggerDoc": "",
	"x": 130,
	"y": 120,
	"wires": [
		["7e5dfa25.b83914", "6b14ba5e.2e0bd4", "293060e0.60c52"]
	]
}, {
	"id": "6b14ba5e.2e0bd4",
	"type": "debug",
	"z": "b88e911f.6ea9b",
	"name": "http.out",
	"active": true,
	"tosidebar": true,
	"console": false,
	"tostatus": false,
	"complete": "true",
	"x": 340,
	"y": 120,
	"wires": []
}, {
	"id": "293060e0.60c52",
	"type": "http response",
	"z": "b88e911f.6ea9b",
	"name": "",
	"statusCode": "200",
	"headers": {},
	"x": 340,
	"y": 180,
	"wires": []
}, {
	"id": "cc861a19.525378",
	"type": "function",
	"z": "b88e911f.6ea9b",
	"name": "prepare-dump",
	"func": "var id = msg.payload.offload.batchId\nmsg.payload = JSON.stringify(flow.get(\"batchresults\"), undefined, 2)\nmsg.filename = `/tmp/${id}.json`\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 520,
	"y": 400,
	"wires": [
		["a0ec7215.7d63b"]
	]
}, {
	"id": "a0ec7215.7d63b",
	"type": "file",
	"z": "b88e911f.6ea9b",
	"name": "",
	"filename": "",
	"appendNewline": false,
	"createDir": false,
	"overwriteFile": "true",
	"x": 670,
	"y": 400,
	"wires": []
}, {
	"id": "580600fa.b563e",
	"type": "http in",
	"z": "b88e911f.6ea9b",
	"name": "",
	"url": "/count",
	"method": "get",
	"upload": false,
	"swaggerDoc": "",
	"x": 560,
	"y": 100,
	"wires": [
		["5378a441.d7fb2c"]
	]
}, {
	"id": "5378a441.d7fb2c",
	"type": "function",
	"z": "b88e911f.6ea9b",
	"name": "",
	"func": "var query = msg.req.query\n\nmsg.payload = query && query.local?\n    (global.get(\"localcount\") || 0) : \n    (flow.get(\"batchcount\") || 0)\n\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 630,
	"y": 140,
	"wires": [
		["883e4e56.4e08f"]
	]
}, {
	"id": "883e4e56.4e08f",
	"type": "http response",
	"z": "b88e911f.6ea9b",
	"name": "",
	"statusCode": "200",
	"headers": {
		"Content-type": "text/plain"
	},
	"x": 700,
	"y": 180,
	"wires": []
}, {
	"id": "7af75494.9f46dc",
	"type": "comment",
	"z": "b88e911f.6ea9b",
	"name": "",
	"info": "http://jurnsearch.files.wordpress.com/2009/07/ocr-test.jpg\nhttp://update.lib.berkeley.edu/wp-content/uploads/2017/03/ocrtext.png",
	"x": 120,
	"y": 460,
	"wires": []
}, {
	"id": "e21627a3.6994e8",
	"type": "cpu",
	"z": "b4eb8788.006cb8",
	"name": "",
	"msgCore": false,
	"msgOverall": true,
	"x": 270,
	"y": 180,
	"wires": [
		["c7a48afb.cae3e8"]
	]
}, {
	"id": "4b348f70.7194d",
	"type": "inject",
	"z": "b4eb8788.006cb8",
	"name": "",
	"topic": "",
	"payload": "",
	"payloadType": "date",
	"repeat": "1",
	"crontab": "",
	"once": false,
	"onceDelay": 0.1,
	"x": 138,
	"y": 120,
	"wires": [
		["e21627a3.6994e8"]
	]
}, {
	"id": "9270658d.f5a2e8",
	"type": "debug",
	"z": "b4eb8788.006cb8",
	"name": "",
	"active": false,
	"tosidebar": true,
	"console": false,
	"tostatus": false,
	"complete": "true",
	"x": 630,
	"y": 360,
	"wires": []
}, {
	"id": "c7a48afb.cae3e8",
	"type": "resources",
	"z": "b4eb8788.006cb8",
	"x": 370,
	"y": 240,
	"wires": [
		["f1634e09.bc608"]
	]
}, {
	"id": "f1634e09.bc608",
	"type": "function",
	"z": "b4eb8788.006cb8",
	"name": "prepare save mon",
	"func": "var results = flow.get(\"monitor\") || []\nvar payload = msg.payload\nvar item = {\n    timestamp: payload.timestamp,\n    cpu: payload.cpu,\n    cpu_freq: payload.cpu_freq,\n    mem: payload.mem,\n    load: payload.load,\n    temp: payload.temp,\n    arm_freq_capped: payload.arm_freq_capped || 0,\n    low_voltage: payload.low_voltage || 0,\n    turbo_disabled: payload.turbo_disabled || 0\n}\n\nresults.push(item)\nflow.set(\"monitor\", results)\n\nmsg.payload = JSON.stringify(results, undefined, 2)\nmsg.filename = `/tmp/monitor.json`\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 450,
	"y": 300,
	"wires": [
		["9270658d.f5a2e8", "2309765e.20370a"]
	]
}, {
	"id": "2309765e.20370a",
	"type": "file",
	"z": "b4eb8788.006cb8",
	"name": "",
	"filename": "",
	"appendNewline": false,
	"createDir": false,
	"overwriteFile": "true",
	"x": 640,
	"y": 300,
	"wires": []
}]
